"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDetectDownloadUrl = exports.runDetect = exports.githubRunDetect = exports.findOrDownloadDetect = exports.githubFindOrDownloadDetect = exports.TOOL_NAME = void 0;
var path_1 = __importDefault(require("path"));
var SIGLogger_1 = require("../../SIGLogger");
var exec_1 = require("@actions/exec");
var tool_cache_1 = require("@actions/tool-cache");
var DETECT_BINARY_REPO_URL = 'https://sig-repo.synopsys.com';
exports.TOOL_NAME = 'detect';
var DETECT_LATEST_VERSION = "7.11.1";
function githubFindOrDownloadDetect(detect_version) {
    if (detect_version === void 0) { detect_version = DETECT_LATEST_VERSION; }
    return __awaiter(this, void 0, void 0, function () {
        var jarName, cachedDetect, detectDownloadUrl;
        return __generator(this, function (_a) {
            jarName = "synopsys-detect-".concat(detect_version, ".jar");
            cachedDetect = (0, tool_cache_1.find)(exports.TOOL_NAME, detect_version);
            if (cachedDetect) {
                return [2 /*return*/, path_1.default.resolve(cachedDetect, jarName)];
            }
            detectDownloadUrl = createDetectDownloadUrl();
            return [2 /*return*/, ((0, tool_cache_1.downloadTool)(detectDownloadUrl)
                    .then(function (detectDownloadPath) { return (0, tool_cache_1.cacheFile)(detectDownloadPath, jarName, exports.TOOL_NAME, detect_version); })
                    //TODO: Jarsigner?
                    .then(function (cachedFolder) { return path_1.default.resolve(cachedFolder, jarName); }))];
        });
    });
}
exports.githubFindOrDownloadDetect = githubFindOrDownloadDetect;
function findOrDownloadDetect(download_dir, verbose, detect_version) {
    if (verbose === void 0) { verbose = false; }
    if (detect_version === void 0) { detect_version = DETECT_LATEST_VERSION; }
    return __awaiter(this, void 0, void 0, function () {
        var jarName, detectDownloadUrl, Downloader, downloader, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    jarName = "synopsys-detect-".concat(detect_version, ".jar");
                    detectDownloadUrl = createDetectDownloadUrl();
                    Downloader = require("nodejs-file-downloader");
                    SIGLogger_1.logger.info("Downloading ".concat(detectDownloadUrl));
                    downloader = new Downloader({
                        url: detectDownloadUrl,
                        directory: download_dir,
                        onProgress: function (percentage, chunk, remainingSize) {
                            if (verbose) {
                                SIGLogger_1.logger.info("%".concat(percentage, " ").concat(remainingSize, " bytes remaining"));
                            }
                        },
                    });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, downloader.download()];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    SIGLogger_1.logger.error("Unable to download file: ".concat(error_1));
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/, (path_1.default.resolve(download_dir, jarName))];
            }
        });
    });
}
exports.findOrDownloadDetect = findOrDownloadDetect;
function githubRunDetect(detectPath, detectArguments) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, (0, exec_1.exec)("java", ['-jar', detectPath].concat(detectArguments), { ignoreReturnCode: true })];
        });
    });
}
exports.githubRunDetect = githubRunDetect;
function runDetect(detectPath, detectArguments) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            // NOTE: Uses GitHub Actions interface to exec
            return [2 /*return*/, (0, exec_1.exec)("java", ['-jar', detectPath].concat(detectArguments), { ignoreReturnCode: true })];
        });
    });
}
exports.runDetect = runDetect;
function createDetectDownloadUrl(repoUrl, detect_version) {
    if (repoUrl === void 0) { repoUrl = DETECT_BINARY_REPO_URL; }
    if (detect_version === void 0) { detect_version = DETECT_LATEST_VERSION; }
    return "".concat(repoUrl, "/bds-integrations-release/com/synopsys/integration/synopsys-detect/").concat(detect_version, "/synopsys-detect-").concat(detect_version, ".jar");
}
exports.createDetectDownloadUrl = createDetectDownloadUrl;
