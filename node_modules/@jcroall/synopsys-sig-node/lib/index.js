"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.COVERITY_PRESENT = exports.COVERITY_NOT_PRESENT = exports.COVERITY_COMMENT_PREFACE = exports.coverityIsInDiff = exports.coverityCreateIssueCommentMessage = exports.coverityCreateReviewCommentMessage = exports.coverityCreateNoLongerPresentMessage = exports.coverityIsPresent = exports.coverityMapMatchingMergeKeys = exports.CoverityProjectIssue = exports.cleanUrl = exports.CoverityApiService = exports.createUpgradeReport = exports.createVulnerabilityReport = exports.createLicenseReport = exports.createComponentVulnerabilityReports = exports.createComponentLicenseReports = exports.createComponentReport = exports.createRapidScanReport = exports.createRapidScanReportString = exports.runDetect = exports.githubRunDetect = exports.findOrDownloadDetect = exports.githubFindOrDownloadDetect = exports.BlackduckApiService = exports.gitlabGetProject = exports.gitlabCreateDiscussionWithoutPosition = exports.gitlabCreateDiscussion = exports.gitlabUpdateNote = exports.gitlabGetDiscussions = exports.gitlabGetDiffMap = exports.githubCreateIssueComment = exports.githubUpdateExistingIssueComment = exports.githubGetExistingIssueComments = exports.githubCreateReview = exports.githubUpdateExistingReviewComment = exports.githubGetExistingReviewComments = exports.uploadArtifact = exports.GitHubCheck = exports.githubCreateCheck = exports.githubGetPullRequestDiff = exports.githubGetDiffMap = exports.githubRelativizePath = exports.githubGetPullRequestNumber = exports.githubGetSha = exports.githubIsPullRequest = exports.azCreateReviewComment = exports.azUpdateComment = exports.azGetExistingReviewThreads = exports.azGetDiffMap = void 0;
exports.relatavize_path = exports.logger = exports.sigmaCreateMessageFromIssue = exports.sigmaUuidCommentOf = exports.sigmaIsInDiff = exports.SIGMA_COMMENT_PREFACE = exports.COVERITY_UNKNOWN_FILE = void 0;
// Azure
var azure_diffmap_1 = require("./azure/azure-diffmap");
Object.defineProperty(exports, "azGetDiffMap", { enumerable: true, get: function () { return azure_diffmap_1.azGetDiffMap; } });
var review_1 = require("./azure/review");
Object.defineProperty(exports, "azGetExistingReviewThreads", { enumerable: true, get: function () { return review_1.azGetExistingReviewThreads; } });
Object.defineProperty(exports, "azUpdateComment", { enumerable: true, get: function () { return review_1.azUpdateComment; } });
Object.defineProperty(exports, "azCreateReviewComment", { enumerable: true, get: function () { return review_1.azCreateReviewComment; } });
// GitHub
var github_context_1 = require("./github/github-context");
Object.defineProperty(exports, "githubIsPullRequest", { enumerable: true, get: function () { return github_context_1.githubIsPullRequest; } });
Object.defineProperty(exports, "githubGetSha", { enumerable: true, get: function () { return github_context_1.githubGetSha; } });
Object.defineProperty(exports, "githubGetPullRequestNumber", { enumerable: true, get: function () { return github_context_1.githubGetPullRequestNumber; } });
Object.defineProperty(exports, "githubRelativizePath", { enumerable: true, get: function () { return github_context_1.githubRelativizePath; } });
var github_diffmap_1 = require("./github/github-diffmap");
Object.defineProperty(exports, "githubGetDiffMap", { enumerable: true, get: function () { return github_diffmap_1.githubGetDiffMap; } });
var pull_request_1 = require("./github/pull-request");
Object.defineProperty(exports, "githubGetPullRequestDiff", { enumerable: true, get: function () { return pull_request_1.githubGetPullRequestDiff; } });
var check_1 = require("./github/check");
Object.defineProperty(exports, "githubCreateCheck", { enumerable: true, get: function () { return check_1.githubCreateCheck; } });
Object.defineProperty(exports, "GitHubCheck", { enumerable: true, get: function () { return check_1.GitHubCheck; } });
var upload_artifacts_1 = require("./github/upload-artifacts");
Object.defineProperty(exports, "uploadArtifact", { enumerable: true, get: function () { return upload_artifacts_1.uploadArtifact; } });
var comment_1 = require("./github/comment");
Object.defineProperty(exports, "githubGetExistingReviewComments", { enumerable: true, get: function () { return comment_1.githubGetExistingReviewComments; } });
Object.defineProperty(exports, "githubUpdateExistingReviewComment", { enumerable: true, get: function () { return comment_1.githubUpdateExistingReviewComment; } });
Object.defineProperty(exports, "githubCreateReview", { enumerable: true, get: function () { return comment_1.githubCreateReview; } });
Object.defineProperty(exports, "githubGetExistingIssueComments", { enumerable: true, get: function () { return comment_1.githubGetExistingIssueComments; } });
Object.defineProperty(exports, "githubUpdateExistingIssueComment", { enumerable: true, get: function () { return comment_1.githubUpdateExistingIssueComment; } });
Object.defineProperty(exports, "githubCreateIssueComment", { enumerable: true, get: function () { return comment_1.githubCreateIssueComment; } });
// GitLab
var gitlab_diffmap_1 = require("./gitlab/gitlab-diffmap");
Object.defineProperty(exports, "gitlabGetDiffMap", { enumerable: true, get: function () { return gitlab_diffmap_1.gitlabGetDiffMap; } });
var discussions_1 = require("./gitlab/discussions");
Object.defineProperty(exports, "gitlabGetDiscussions", { enumerable: true, get: function () { return discussions_1.gitlabGetDiscussions; } });
Object.defineProperty(exports, "gitlabUpdateNote", { enumerable: true, get: function () { return discussions_1.gitlabUpdateNote; } });
Object.defineProperty(exports, "gitlabCreateDiscussion", { enumerable: true, get: function () { return discussions_1.gitlabCreateDiscussion; } });
Object.defineProperty(exports, "gitlabCreateDiscussionWithoutPosition", { enumerable: true, get: function () { return discussions_1.gitlabCreateDiscussionWithoutPosition; } });
var gitlab_utils_1 = require("./gitlab/gitlab-utils");
Object.defineProperty(exports, "gitlabGetProject", { enumerable: true, get: function () { return gitlab_utils_1.gitlabGetProject; } });
// Black Duck
var blackduck_api_1 = require("./blackduck/blackduck-api");
Object.defineProperty(exports, "BlackduckApiService", { enumerable: true, get: function () { return blackduck_api_1.BlackduckApiService; } });
var detect_manager_1 = require("./blackduck/detect/detect-manager");
Object.defineProperty(exports, "githubFindOrDownloadDetect", { enumerable: true, get: function () { return detect_manager_1.githubFindOrDownloadDetect; } });
Object.defineProperty(exports, "findOrDownloadDetect", { enumerable: true, get: function () { return detect_manager_1.findOrDownloadDetect; } });
Object.defineProperty(exports, "githubRunDetect", { enumerable: true, get: function () { return detect_manager_1.githubRunDetect; } });
Object.defineProperty(exports, "runDetect", { enumerable: true, get: function () { return detect_manager_1.runDetect; } });
var blackduck_utils_1 = require("./blackduck/blackduck-utils");
Object.defineProperty(exports, "createRapidScanReportString", { enumerable: true, get: function () { return blackduck_utils_1.createRapidScanReportString; } });
Object.defineProperty(exports, "createRapidScanReport", { enumerable: true, get: function () { return blackduck_utils_1.createRapidScanReport; } });
Object.defineProperty(exports, "createComponentReport", { enumerable: true, get: function () { return blackduck_utils_1.createComponentReport; } });
Object.defineProperty(exports, "createComponentLicenseReports", { enumerable: true, get: function () { return blackduck_utils_1.createComponentLicenseReports; } });
Object.defineProperty(exports, "createComponentVulnerabilityReports", { enumerable: true, get: function () { return blackduck_utils_1.createComponentVulnerabilityReports; } });
Object.defineProperty(exports, "createLicenseReport", { enumerable: true, get: function () { return blackduck_utils_1.createLicenseReport; } });
Object.defineProperty(exports, "createVulnerabilityReport", { enumerable: true, get: function () { return blackduck_utils_1.createVulnerabilityReport; } });
Object.defineProperty(exports, "createUpgradeReport", { enumerable: true, get: function () { return blackduck_utils_1.createUpgradeReport; } });
var coverity_api_1 = require("./coverity/coverity-api");
Object.defineProperty(exports, "CoverityApiService", { enumerable: true, get: function () { return coverity_api_1.CoverityApiService; } });
Object.defineProperty(exports, "cleanUrl", { enumerable: true, get: function () { return coverity_api_1.cleanUrl; } });
var coverity_issue_mapper_1 = require("./coverity/coverity-issue-mapper");
Object.defineProperty(exports, "CoverityProjectIssue", { enumerable: true, get: function () { return coverity_issue_mapper_1.CoverityProjectIssue; } });
Object.defineProperty(exports, "coverityMapMatchingMergeKeys", { enumerable: true, get: function () { return coverity_issue_mapper_1.coverityMapMatchingMergeKeys; } });
var coverity_utils_1 = require("./coverity/coverity-utils");
Object.defineProperty(exports, "coverityIsPresent", { enumerable: true, get: function () { return coverity_utils_1.coverityIsPresent; } });
Object.defineProperty(exports, "coverityCreateNoLongerPresentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateNoLongerPresentMessage; } });
Object.defineProperty(exports, "coverityCreateReviewCommentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateReviewCommentMessage; } });
Object.defineProperty(exports, "coverityCreateIssueCommentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateIssueCommentMessage; } });
Object.defineProperty(exports, "coverityIsInDiff", { enumerable: true, get: function () { return coverity_utils_1.coverityIsInDiff; } });
Object.defineProperty(exports, "COVERITY_COMMENT_PREFACE", { enumerable: true, get: function () { return coverity_utils_1.COVERITY_COMMENT_PREFACE; } });
Object.defineProperty(exports, "COVERITY_NOT_PRESENT", { enumerable: true, get: function () { return coverity_utils_1.COVERITY_NOT_PRESENT; } });
Object.defineProperty(exports, "COVERITY_PRESENT", { enumerable: true, get: function () { return coverity_utils_1.COVERITY_PRESENT; } });
Object.defineProperty(exports, "COVERITY_UNKNOWN_FILE", { enumerable: true, get: function () { return coverity_utils_1.COVERITY_UNKNOWN_FILE; } });
var sigma_utils_1 = require("./sigma/sigma-utils");
Object.defineProperty(exports, "SIGMA_COMMENT_PREFACE", { enumerable: true, get: function () { return sigma_utils_1.SIGMA_COMMENT_PREFACE; } });
Object.defineProperty(exports, "sigmaIsInDiff", { enumerable: true, get: function () { return sigma_utils_1.sigmaIsInDiff; } });
Object.defineProperty(exports, "sigmaUuidCommentOf", { enumerable: true, get: function () { return sigma_utils_1.sigmaUuidCommentOf; } });
Object.defineProperty(exports, "sigmaCreateMessageFromIssue", { enumerable: true, get: function () { return sigma_utils_1.sigmaCreateMessageFromIssue; } });
// Polaris
// ...
// Other
var SIGLogger_1 = require("./SIGLogger");
Object.defineProperty(exports, "logger", { enumerable: true, get: function () { return SIGLogger_1.logger; } });
var paths_1 = require("./paths");
Object.defineProperty(exports, "relatavize_path", { enumerable: true, get: function () { return paths_1.relatavize_path; } });
